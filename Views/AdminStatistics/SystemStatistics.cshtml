@{
    ViewData["Title"] = "Thống kê Log hệ thống";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

<style>
    body {
        background: linear-gradient(135deg, #f8fbff, #e9f5ff);
        font-family: "Segoe UI", Roboto, Arial, sans-serif;
    }

    h2 {
        text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
    }

    .card {
        border-radius: 15px;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .card:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
        }

        .card .card-body h3 {
            font-size: 1.8rem;
            font-weight: bold;
        }
    #logSuccessPieChart {
        max-height: 160px !important;
    }

    hr {
        border: none;
        height: 2px;
        background: linear-gradient(90deg, #7ee97a, #005c99, #a6e7ff);
        opacity: 0.8;
    }

    .table th {
        white-space: nowrap;
    }

    .icon {
        font-size: 1.5rem;
        margin-right: 6px;
    }
</style>

<h2 class="mb-4 text-black fw-bold"><i class="bi bi-activity"></i> BÁO CÁO HỆ THỐNG</h2>

<div class="row mb-4 text-center">
    <!-- Hoạt động hôm nay -->
    <div class="col-md-3 mb-3">
        <div class="card border-success shadow-sm">
            <div class="card-body">
                <h6 class="text-muted"><i class="bi bi-person-check icon text-success"></i>Hoạt động hôm nay</h6>
                <h3 id="activeUsersToday" class="text-success">0</h3>
            </div>
        </div>
    </div>

    <!-- Đăng ký mới -->
    <div class="col-md-3 mb-3">
        <div class="card border-info shadow-sm">
            <div class="card-body">
                <h6 class="text-muted"><i class="bi bi-person-plus icon text-info"></i>Đăng ký mới (30 ngày)</h6>
                <h3 id="newUsersCount" class="text-info">0</h3>
            </div>
        </div>
    </div>

    <!-- Tỷ lệ thành công -->
    <div class="col-md-3 mb-3">
        <div class="card border-primary shadow-sm">
            <div class="card-body">
                <h6 class="text-muted"><i class="bi bi-graph-up-arrow icon text-primary"></i>Tỷ lệ thành công</h6>
                <h3 id="successRate" class="text-primary">0%</h3>
            </div>
        </div>
    </div>

    <!-- Tổng log -->
    <div class="col-md-3 mb-3">
        <div class="card border-secondary shadow-sm">
            <div class="card-body">
                <h6 class="text-muted"><i class="bi bi-journal-text icon text-secondary"></i>Tổng số Log</h6>
                <h3 id="totalLogs" class="text-secondary">0</h3>
            </div>
        </div>
    </div>
</div>

<hr />

<!-- ======= Biểu đồ nhỏ gọn ======= -->
<div class="row mb-5 justify-content-center">
    <div class="col-md-5">
        <div class="card shadow-sm">
            <div class="card-header fw-bold text-center text-black">
                <i class="bi bi-pie-chart-fill"></i> THỐNG KÊ SỐ HOẠT ĐỘNG
            </div>
            <div class="card-body">
                <canvas id="logSuccessPieChart"></canvas>
            </div>
        </div>
    </div>
</div>


<!-- 1. Log lỗi nhiều nhất -->
<div class="card mb-4 shadow-sm">
    <div class="card-header fw-bold text-danger">
        <i class="bi bi-bug-fill"></i>  LỖI HAY GẶP
    </div>
    <div class="card-body">
        <table class="table table-bordered table-hover align-middle">
            <thead class="table-danger">
                <tr>
                    <th>Hành động</th>
                    <th>Số lần lỗi</th>
                </tr>
            </thead>
            <tbody id="errorLogsTable"></tbody>
        </table>
    </div>
</div>

<!-- 5. Người dùng hoạt động nhiều nhất -->
<div class="card mb-4 shadow-sm">
    <div class="card-header fw-bold text-success">
        <i class="bi bi-people-fill"></i> HOẠT ĐỘNG NHIỀU NHẤT
    </div>
    <div class="card-body">
        <table class="table table-bordered table-hover align-middle">
            <thead class="table-success">
                <tr>
                    <th>Tên đăng nhập</th>
                    <th>Họ tên</th>
                    <th>Chức vụ</th>
                    <th>Số hành động</th>
                </tr>
            </thead>
            <tbody id="activeUsersTable"></tbody>
        </table>
    </div>
</div>


<!-- 6. Log gần đây nhất -->
<div class="card shadow-sm">
    <div class="card-header fw-bold text-primary">
        <i class="bi bi-clock-history"></i> HOẠT ĐỘNG GẦN ĐÂY
    </div>
    <div class="card-body">
        <table class="table table-bordered table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th>Thời gian</th>
                    <th>Tài khoản</th> 
                    <th>Hành động</th> 
                    <th>Mô tả</th>
                    <th>Kết quả</th>
                </tr>
            </thead>
            <tbody id="recentLogsTable"></tbody>
        </table>
    </div>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            loadActiveUsersToday();
            loadUserRegisterDaily();
            loadLogSuccessRate();
            loadTopErrorLogs();
            loadTopActiveUsers();
            loadRecentLogs();
        });

        async function loadActiveUsersToday() {
            const res = await fetch('/AdminStatistics/ActiveUsersToday');
            const data = await res.json();
            document.getElementById('activeUsersToday').textContent = data.activeUsers || 0;
        }

        async function loadUserRegisterDaily() {
            const res = await fetch('/AdminStatistics/UserRegisterDailyChart');
            const data = await res.json();
            const totalNew = data.reduce((a, b) => a + b.count, 0);
            document.getElementById('newUsersCount').textContent = totalNew;
        }

        async function loadLogSuccessRate() {
            const res = await fetch('/AdminStatistics/LogSuccessRate');
            const data = await res.json();
            document.getElementById('successRate').textContent = data.successRate.toFixed(1) + '%';
            document.getElementById('totalLogs').textContent = data.total;

            const ctx = document.getElementById('logSuccessPieChart').getContext('2d');
            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: ['Thành công', 'Thất bại'],
                    datasets: [{
                        data: [data.success, data.fail],
                        backgroundColor: ['#2ecc71', '#e74c3c'],
                        borderWidth: 1
                    }]
                },
                options: {
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: { font: { size: 14 } }
                        }
                    }
                }
            });
        }

        async function loadTopErrorLogs() {
            const res = await fetch('/AdminStatistics/TopErrorLogs');
            const data = await res.json();
            const tbody = document.getElementById('errorLogsTable');
            tbody.innerHTML = data.map(x => `
                <tr>
                    <td><i class="bi bi-exclamation-triangle text-danger me-2"></i>${x.actionType}</td>
                    <td>${x.errorCount}</td>
                </tr>`).join('');
        }

           async function loadTopActiveUsers() {
            const res = await fetch('/AdminStatistics/TopActiveUsers');
            const data = await res.json();
            const tbody = document.getElementById('activeUsersTable');

            tbody.innerHTML = data.map(x => `
                <tr>
                    <td>
                        <i class="bi ${x.roleName === 'Admin' ? 'bi-shield-lock-fill text-primary' : 'bi-person-fill text-success'} me-2"></i>
                        ${x.username ?? '-'}
                    </td>
                    <td>${x.fullName ?? '-'}</td>
                    <td>
                        <span class="badge ${x.roleName === 'Admin' ? 'bg-primary' : 'bg-secondary'}">
                            ${x.roleName}
                        </span>
                    </td>
                    <td class="fw-bold text-center">${x.actionCount}</td>
                </tr>
            `).join('');
        }


         async function loadRecentLogs() {
            const res = await fetch('/AdminStatistics/RecentLogs');
            const data = await res.json();
            const tbody = document.getElementById('recentLogsTable');
            tbody.innerHTML = data.map(x => `
                <tr>
                    <td>${new Date(x.createdAt).toLocaleString()}</td>
                    <td>${x.username ?? '—'}</td>
                    <td>${x.actionType}</td>
                    <td>${x.actionDescription ?? ''}</td>
                    <td>${x.isSuccess
                        ? '<i class="bi bi-check-circle-fill text-success"></i>'
                        : '<i class="bi bi-x-circle-fill text-danger"></i>'}</td>
                </tr>`).join('');
        }

    </script>
}
